<?xml version="1.0"?>

<robot name="go2" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="DEBUG" default="false"/>

    <xacro:include filename="$(find go2_description)/xacro/const.xacro"/>
    <xacro:include filename="$(find go2_description)/xacro/materials.xacro"/>
    <xacro:include filename="$(find go2_description)/xacro/leg.xacro"/>
    <!-- <xacro:include filename="$(find go2_description)/xacro/gazebo.xacro"/> -->
    <xacro:include filename="$(find tbai_description)/urdf/utils.xacro" />

    <!-- Transmissions LF -->
    <xacro:transmission name="transmission_LF_HAA" joint="LF_HAA" actuator="motor_LF_HAA"/>
    <xacro:transmission name="transmission_LF_HFE" joint="LF_HFE" actuator="motor_LF_HFE"/>
    <xacro:transmission name="transmission_LF_KFE" joint="LF_KFE" actuator="motor_LF_KFE"/>

    <!-- Transmissions LH -->
    <xacro:transmission name="transmission_LH_HAA" joint="LH_HAA" actuator="motor_LH_HAA"/>
    <xacro:transmission name="transmission_LH_HFE" joint="LH_HFE" actuator="motor_LH_HFE"/>
    <xacro:transmission name="transmission_LH_KFE" joint="LH_KFE" actuator="motor_LH_KFE"/>

    <!-- Transmissions RF -->
    <xacro:transmission name="transmission_RF_HAA" joint="RF_HAA" actuator="motor_RF_HAA"/>
    <xacro:transmission name="transmission_RF_HFE" joint="RF_HFE" actuator="motor_RF_HFE"/>
    <xacro:transmission name="transmission_RF_KFE" joint="RF_KFE" actuator="motor_RF_KFE"/>

    <!-- Transmissions RH -->
    <xacro:transmission name="transmission_RH_HAA" joint="RH_HAA" actuator="motor_RH_HAA"/>
    <xacro:transmission name="transmission_RH_HFE" joint="RH_HFE" actuator="motor_RH_HFE"/>
    <xacro:transmission name="transmission_RH_KFE" joint="RH_KFE" actuator="motor_RH_KFE"/>


    <!-- Joint controller -->
    <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <robotNamespace>/go2</robotNamespace>
        </plugin>
    </gazebo>

    <!-- State publisher -->
    <gazebo>
        <plugin filename="libStatePublisher.so" name="StatePublisher"/>
    </gazebo>

    <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
    <xacro:if value="$(arg DEBUG)">
        <link name="world"/>
        <joint name="base_static_joint" type="fixed">
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <parent link="world"/>
            <child link="base"/>
        </joint>
    </xacro:if> 

    <link name="base">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
        </visual>
    </link>

    <joint name="floating_base" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="base"/>
        <child link="trunk"/>
    </joint>

    <link name="trunk">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://go2_description/meshes/trunk.dae" scale="1 1 1"/>
            </geometry>
            <!-- <material name="orange"/> -->
        </visual>
        <collision>
            <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
            <geometry>
                <!-- <box size="${trunk_length} ${trunk_width} ${trunk_height}"/> -->
                <cylinder length="${trunk_length}" radius="${trunk_width}"/>            
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="${trunk_com_x} ${trunk_com_y} ${trunk_com_z}"/>
            <mass value="${trunk_mass}"/>
            <inertia
                ixx="${trunk_ixx}" ixy="${trunk_ixy}" ixz="${trunk_ixz}"
                iyy="${trunk_iyy}" iyz="${trunk_iyz}"
                izz="${trunk_izz}"/>  
        </inertial>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="trunk"/>
        <child link="imu_link"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="imu_link">
        <inertial>
            <mass value="0.001"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <!-- <material name="red"/> -->
        </visual>
        <!-- <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <sphere radius="0.001" />            
            </geometry>
        </collision> -->
    </link>

    <!--
    <joint name="load_joint" type="fixed">
        <parent link="trunk"/>
        <child link="load_link"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="load_link">
        <inertial>
            <mass value="5"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0.2"/>
            <geometry>
                <box size="0.5 0.3 0.2"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size=".001 .001 .001"/>
            </geometry>
        </collision>
    </link>
    -->

    <xacro:leg name="FR" mirror="-1" mirror_dae= "False" front_hind="1"  front_hind_dae="True"  />
    <xacro:leg name="FL" mirror="1"  mirror_dae="True"   front_hind="1"  front_hind_dae="True"  />
    <xacro:leg name="RR" mirror="-1" mirror_dae="False"  front_hind="-1" front_hind_dae="False" />
    <xacro:leg name="RL" mirror="1"  mirror_dae="True"   front_hind="-1" front_hind_dae="False" />

    <!-- RealSense D435 -->
    <xacro:include filename="$(find go2_description)/xacro/_d435.urdf.xacro" />
    <xacro:sensor_d435 parent="base" name="camera" topics_ns="camera">
      <origin xyz="0.3 0 0.075" rpy="0 0.50 0" />
    </xacro:sensor_d435>

    <!-- Grabbing from tbai_description -->

    <!-- Add contact sensors -->
    <gazebo reference="LF_FOOT">
        <sensor name="lf_foot_contact" type="contact">
        <plugin name="lf_contact_plugin" filename="libContactSensor.so"/>
        <contact>
            <collision>LF_SHANK_fixed_joint_lump__LF_FOOT_collision_3</collision>
        </contact>
        </sensor>
    </gazebo>

    <gazebo reference="RF_FOOT">
        <sensor name="rf_foot_contact" type="contact">
        <plugin name="rf_contact_plugin" filename="libContactSensor.so"/>
        <contact>
            <collision>RF_SHANK_fixed_joint_lump__RF_FOOT_collision_3</collision>
        </contact>
        </sensor>
    </gazebo>

    <gazebo reference="LH_FOOT">
        <sensor name="lh_foot_contact" type="contact">
        <plugin name="lh_contact_plugin" filename="libContactSensor.so"/>
        <contact>
            <collision>LH_SHANK_fixed_joint_lump__LH_FOOT_collision_3</collision>
        </contact>
        </sensor>
    </gazebo>

    <gazebo reference="RH_FOOT">
        <sensor name="rh_foot_contact" type="contact">
        <plugin name="rh_contact_plugin" filename="libContactSensor.so"/>
        <contact>
            <collision>RH_SHANK_fixed_joint_lump__RH_FOOT_collision_3</collision>
        </contact>
        </sensor>
    </gazebo>

    <!-- Gazebo materials -->
    <gazebo reference="LF_FOOT">
        <mu1>1.85</mu1>
        <mu2>1.85</mu2>
        <kp value="1000000.0"/>
        <kd value="100.0"/>
    </gazebo>

    <gazebo reference="RF_FOOT">
        <mu1>1.85</mu1>
        <mu2>1.85</mu2>
        <kp value="1000000.0"/>
        <kd value="100.0"/>
    </gazebo>

    <gazebo reference="LH_FOOT">
        <mu1>1.85</mu1>
        <mu2>1.85</mu2>
        <kp value="1000000.0"/>
        <kd value="100.0"/>
    </gazebo>

    <gazebo reference="RH_FOOT">
        <mu1>1.85</mu1>
        <mu2>1.85</mu2>
        <kp value="1000000.0"/>
        <kd value="100.0"/>
    </gazebo>

</robot>
